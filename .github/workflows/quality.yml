name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run ESLint with detailed output
        run: |
          pnpm lint --format=json > eslint-results.json || true
          pnpm lint

      - name: Upload ESLint results
        uses: actions/upload-artifact@v4
        with:
          name: eslint-results
          path: eslint-results.json
          retention-days: 7

      - name: Check TypeScript types
        run: pnpm exec tsc --noEmit --pretty

      - name: Build and analyze bundle
        run: |
          pnpm build
          ls -la dist/
          du -sh dist/*

      - name: Check for large files
        run: |
          find dist/ -type f -size +1M -exec ls -lh {} \;
          echo "Build completed successfully"

  performance-check:
    name: Performance Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build application
        run: pnpm build

      - name: Analyze bundle size
        run: |
          echo "## 📊 Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Output:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          ls -la dist/ >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### File Sizes:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          du -sh dist/* >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Check for performance issues
        run: |
          # Check for large JavaScript files
          LARGE_JS=$(find dist/ -name "*.js" -size +500k | wc -l)
          if [ $LARGE_JS -gt 0 ]; then
            echo "⚠️ Warning: Found $LARGE_JS large JavaScript files (>500KB)"
            find dist/ -name "*.js" -size +500k -exec ls -lh {} \;
          fi
          
          # Check for large CSS files
          LARGE_CSS=$(find dist/ -name "*.css" -size +100k | wc -l)
          if [ $LARGE_CSS -gt 0 ]; then
            echo "⚠️ Warning: Found $LARGE_CSS large CSS files (>100KB)"
            find dist/ -name "*.css" -size +100k -exec ls -lh {} \;
          fi